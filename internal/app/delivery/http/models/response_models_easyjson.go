// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package http_models

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
	csrf_models "glide/internal/app/csrf/csrf_models"
	models "glide/internal/app/models"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels(in *jlexer.Lexer, out *TokenResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "token":
			out.Token = csrf_models.Token(in.String())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels(out *jwriter.Writer, in TokenResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"token\":"
		out.RawString(prefix[1:])
		out.String(string(in.Token))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TokenResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TokenResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TokenResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TokenResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels1(in *jlexer.Lexer, out *SubscriptionsUserResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "creators":
			if in.IsNull() {
				in.Skip()
				out.Creators = nil
			} else {
				in.Delim('[')
				if out.Creators == nil {
					if !in.IsDelim(']') {
						out.Creators = make([]ResponseCreatorSubscrube, 0, 0)
					} else {
						out.Creators = []ResponseCreatorSubscrube{}
					}
				} else {
					out.Creators = (out.Creators)[:0]
				}
				for !in.IsDelim(']') {
					var v1 ResponseCreatorSubscrube
					(v1).UnmarshalEasyJSON(in)
					out.Creators = append(out.Creators, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels1(out *jwriter.Writer, in SubscriptionsUserResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"creators\":"
		out.RawString(prefix[1:])
		if in.Creators == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.Creators {
				if v2 > 0 {
					out.RawByte(',')
				}
				(v3).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SubscriptionsUserResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SubscriptionsUserResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SubscriptionsUserResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SubscriptionsUserResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels1(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels2(in *jlexer.Lexer, out *SubscribersCreatorResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "users":
			if in.IsNull() {
				in.Skip()
				out.Users = nil
			} else {
				in.Delim('[')
				if out.Users == nil {
					if !in.IsDelim(']') {
						out.Users = make([]ResponseUser, 0, 1)
					} else {
						out.Users = []ResponseUser{}
					}
				} else {
					out.Users = (out.Users)[:0]
				}
				for !in.IsDelim(']') {
					var v4 ResponseUser
					(v4).UnmarshalEasyJSON(in)
					out.Users = append(out.Users, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels2(out *jwriter.Writer, in SubscribersCreatorResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"users\":"
		out.RawString(prefix[1:])
		if in.Users == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Users {
				if v5 > 0 {
					out.RawByte(',')
				}
				(v6).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SubscribersCreatorResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SubscribersCreatorResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SubscribersCreatorResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SubscribersCreatorResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels2(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels3(in *jlexer.Lexer, out *ResponseUserPayments) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "payments":
			if in.IsNull() {
				in.Skip()
				out.Payments = nil
			} else {
				in.Delim('[')
				if out.Payments == nil {
					if !in.IsDelim(']') {
						out.Payments = make([]models.UserPayments, 0, 0)
					} else {
						out.Payments = []models.UserPayments{}
					}
				} else {
					out.Payments = (out.Payments)[:0]
				}
				for !in.IsDelim(']') {
					var v7 models.UserPayments
					easyjson316682a0DecodeGlideInternalAppModels(in, &v7)
					out.Payments = append(out.Payments, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels3(out *jwriter.Writer, in ResponseUserPayments) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"payments\":"
		out.RawString(prefix[1:])
		if in.Payments == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Payments {
				if v8 > 0 {
					out.RawByte(',')
				}
				easyjson316682a0EncodeGlideInternalAppModels(out, v9)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseUserPayments) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseUserPayments) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseUserPayments) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseUserPayments) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels3(l, v)
}
func easyjson316682a0DecodeGlideInternalAppModels(in *jlexer.Lexer, out *models.UserPayments) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "creator_nickname":
			out.CreatorNickname = string(in.String())
		case "creator_category":
			out.CreatorCategory = string(in.String())
		case "creator_description":
			out.CreatorDescription = string(in.String())
		case "amount":
			out.Amount = float64(in.Float64())
		case "date":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Date).UnmarshalJSON(data))
			}
		case "creator_id":
			out.CreatorID = int64(in.Int64())
		case "user_id":
			out.UserID = int64(in.Int64())
		case "status":
			out.Status = bool(in.Bool())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppModels(out *jwriter.Writer, in models.UserPayments) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"creator_nickname\":"
		out.RawString(prefix[1:])
		out.String(string(in.CreatorNickname))
	}
	{
		const prefix string = ",\"creator_category\":"
		out.RawString(prefix)
		out.String(string(in.CreatorCategory))
	}
	{
		const prefix string = ",\"creator_description\":"
		out.RawString(prefix)
		out.String(string(in.CreatorDescription))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.Float64(float64(in.Amount))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.Raw((in.Date).MarshalJSON())
	}
	if in.CreatorID != 0 {
		const prefix string = ",\"creator_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.CreatorID))
	}
	if in.UserID != 0 {
		const prefix string = ",\"user_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.UserID))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.Bool(bool(in.Status))
	}
	out.RawByte('}')
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels4(in *jlexer.Lexer, out *ResponseUserComments) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "comments":
			if in.IsNull() {
				in.Skip()
				out.Comments = nil
			} else {
				in.Delim('[')
				if out.Comments == nil {
					if !in.IsDelim(']') {
						out.Comments = make([]ResponseUserComment, 0, 0)
					} else {
						out.Comments = []ResponseUserComment{}
					}
				} else {
					out.Comments = (out.Comments)[:0]
				}
				for !in.IsDelim(']') {
					var v10 ResponseUserComment
					(v10).UnmarshalEasyJSON(in)
					out.Comments = append(out.Comments, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels4(out *jwriter.Writer, in ResponseUserComments) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"comments\":"
		out.RawString(prefix[1:])
		if in.Comments == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.Comments {
				if v11 > 0 {
					out.RawByte(',')
				}
				(v12).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseUserComments) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseUserComments) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseUserComments) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseUserComments) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels4(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels5(in *jlexer.Lexer, out *ResponseUserComment) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "comment_id":
			out.ID = int64(in.Int64())
		case "body":
			out.Body = string(in.String())
		case "as_creator":
			out.AsCreator = bool(in.Bool())
		case "post_id":
			out.PostId = int64(in.Int64())
		case "date":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Date).UnmarshalJSON(data))
			}
		case "post_name":
			out.PostName = string(in.String())
		case "post_cover":
			out.PostCover = string(in.String())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels5(out *jwriter.Writer, in ResponseUserComment) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"comment_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix)
		out.String(string(in.Body))
	}
	if in.AsCreator {
		const prefix string = ",\"as_creator\":"
		out.RawString(prefix)
		out.Bool(bool(in.AsCreator))
	}
	{
		const prefix string = ",\"post_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.PostId))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.Raw((in.Date).MarshalJSON())
	}
	{
		const prefix string = ",\"post_name\":"
		out.RawString(prefix)
		out.String(string(in.PostName))
	}
	{
		const prefix string = ",\"post_cover\":"
		out.RawString(prefix)
		out.String(string(in.PostCover))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseUserComment) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseUserComment) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseUserComment) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseUserComment) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels5(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels6(in *jlexer.Lexer, out *ResponseUser) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "login":
			out.Login = string(in.String())
		case "nickname":
			out.Nickname = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels6(out *jwriter.Writer, in ResponseUser) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"login\":"
		out.RawString(prefix)
		out.String(string(in.Login))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	if in.Avatar != "" {
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseUser) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseUser) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseUser) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseUser) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels6(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels7(in *jlexer.Lexer, out *ResponsePosts) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "posts":
			if in.IsNull() {
				in.Skip()
				out.Posts = nil
			} else {
				in.Delim('[')
				if out.Posts == nil {
					if !in.IsDelim(']') {
						out.Posts = make([]ResponsePost, 0, 0)
					} else {
						out.Posts = []ResponsePost{}
					}
				} else {
					out.Posts = (out.Posts)[:0]
				}
				for !in.IsDelim(']') {
					var v13 ResponsePost
					(v13).UnmarshalEasyJSON(in)
					out.Posts = append(out.Posts, v13)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels7(out *jwriter.Writer, in ResponsePosts) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"posts\":"
		out.RawString(prefix[1:])
		if in.Posts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v14, v15 := range in.Posts {
				if v14 > 0 {
					out.RawByte(',')
				}
				(v15).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponsePosts) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponsePosts) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponsePosts) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponsePosts) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels7(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels8(in *jlexer.Lexer, out *ResponsePostWithAttaches) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "post":
			(out.Post).UnmarshalEasyJSON(in)
		case "attaches":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]ResponseAttach, 0, 1)
					} else {
						out.Data = []ResponseAttach{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v16 ResponseAttach
					(v16).UnmarshalEasyJSON(in)
					out.Data = append(out.Data, v16)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels8(out *jwriter.Writer, in ResponsePostWithAttaches) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"post\":"
		out.RawString(prefix[1:])
		(in.Post).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"attaches\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v17, v18 := range in.Data {
				if v17 > 0 {
					out.RawByte(',')
				}
				(v18).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponsePostWithAttaches) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponsePostWithAttaches) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponsePostWithAttaches) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponsePostWithAttaches) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels8(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels9(in *jlexer.Lexer, out *ResponsePostComments) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "comments":
			if in.IsNull() {
				in.Skip()
				out.Comments = nil
			} else {
				in.Delim('[')
				if out.Comments == nil {
					if !in.IsDelim(']') {
						out.Comments = make([]ResponsePostComment, 0, 0)
					} else {
						out.Comments = []ResponsePostComment{}
					}
				} else {
					out.Comments = (out.Comments)[:0]
				}
				for !in.IsDelim(']') {
					var v19 ResponsePostComment
					(v19).UnmarshalEasyJSON(in)
					out.Comments = append(out.Comments, v19)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels9(out *jwriter.Writer, in ResponsePostComments) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"comments\":"
		out.RawString(prefix[1:])
		if in.Comments == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v20, v21 := range in.Comments {
				if v20 > 0 {
					out.RawByte(',')
				}
				(v21).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponsePostComments) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponsePostComments) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponsePostComments) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponsePostComments) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels9(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels10(in *jlexer.Lexer, out *ResponsePostComment) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "comment_id":
			out.ID = int64(in.Int64())
		case "body":
			out.Body = string(in.String())
		case "as_creator":
			out.AsCreator = bool(in.Bool())
		case "author_id":
			out.AuthorId = int64(in.Int64())
		case "date":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Date).UnmarshalJSON(data))
			}
		case "author_nickname":
			out.AuthorNickname = string(in.String())
		case "author_avatar":
			out.AuthorAvatar = string(in.String())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels10(out *jwriter.Writer, in ResponsePostComment) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"comment_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix)
		out.String(string(in.Body))
	}
	if in.AsCreator {
		const prefix string = ",\"as_creator\":"
		out.RawString(prefix)
		out.Bool(bool(in.AsCreator))
	}
	{
		const prefix string = ",\"author_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.AuthorId))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.Raw((in.Date).MarshalJSON())
	}
	{
		const prefix string = ",\"author_nickname\":"
		out.RawString(prefix)
		out.String(string(in.AuthorNickname))
	}
	{
		const prefix string = ",\"author_avatar\":"
		out.RawString(prefix)
		out.String(string(in.AuthorAvatar))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponsePostComment) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponsePostComment) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponsePostComment) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponsePostComment) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels10(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels11(in *jlexer.Lexer, out *ResponsePost) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "posts_id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "type_awards":
			out.Awards = int64(in.Int64())
		case "likes":
			out.Likes = int64(in.Int64())
		case "cover":
			out.Cover = string(in.String())
		case "add_like":
			out.AddLike = bool(in.Bool())
		case "views":
			out.Views = int64(in.Int64())
		case "comments":
			out.Comments = int64(in.Int64())
		case "date":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Date).UnmarshalJSON(data))
			}
		case "is_draft":
			out.IsDraft = bool(in.Bool())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels11(out *jwriter.Writer, in ResponsePost) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"posts_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	if in.Awards != 0 {
		const prefix string = ",\"type_awards\":"
		out.RawString(prefix)
		out.Int64(int64(in.Awards))
	}
	{
		const prefix string = ",\"likes\":"
		out.RawString(prefix)
		out.Int64(int64(in.Likes))
	}
	{
		const prefix string = ",\"cover\":"
		out.RawString(prefix)
		out.String(string(in.Cover))
	}
	if in.AddLike {
		const prefix string = ",\"add_like\":"
		out.RawString(prefix)
		out.Bool(bool(in.AddLike))
	}
	{
		const prefix string = ",\"views\":"
		out.RawString(prefix)
		out.Int64(int64(in.Views))
	}
	{
		const prefix string = ",\"comments\":"
		out.RawString(prefix)
		out.Int64(int64(in.Comments))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.Raw((in.Date).MarshalJSON())
	}
	if in.IsDraft {
		const prefix string = ",\"is_draft\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsDraft))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponsePost) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponsePost) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponsePost) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponsePost) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels11(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels12(in *jlexer.Lexer, out *ResponsePayToken) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "token":
			out.PayToken = string(in.String())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels12(out *jwriter.Writer, in ResponsePayToken) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"token\":"
		out.RawString(prefix[1:])
		out.String(string(in.PayToken))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponsePayToken) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponsePayToken) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponsePayToken) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponsePayToken) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels12(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels13(in *jlexer.Lexer, out *ResponsePayAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "account_number":
			out.Account = string(in.String())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels13(out *jwriter.Writer, in ResponsePayAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"account_number\":"
		out.RawString(prefix[1:])
		out.String(string(in.Account))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponsePayAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponsePayAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponsePayAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponsePayAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels13(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels14(in *jlexer.Lexer, out *ResponseLike) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "likes":
			out.Likes = int64(in.Int64())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels14(out *jwriter.Writer, in ResponseLike) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"likes\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Likes))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseLike) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseLike) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseLike) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseLike) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels14(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels15(in *jlexer.Lexer, out *ResponseInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "category":
			if in.IsNull() {
				in.Skip()
				out.Category = nil
			} else {
				in.Delim('[')
				if out.Category == nil {
					if !in.IsDelim(']') {
						out.Category = make([]string, 0, 4)
					} else {
						out.Category = []string{}
					}
				} else {
					out.Category = (out.Category)[:0]
				}
				for !in.IsDelim(']') {
					var v22 string
					v22 = string(in.String())
					out.Category = append(out.Category, v22)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "type_post_data":
			if in.IsNull() {
				in.Skip()
				out.TypePostData = nil
			} else {
				in.Delim('[')
				if out.TypePostData == nil {
					if !in.IsDelim(']') {
						out.TypePostData = make([]string, 0, 4)
					} else {
						out.TypePostData = []string{}
					}
				} else {
					out.TypePostData = (out.TypePostData)[:0]
				}
				for !in.IsDelim(']') {
					var v23 string
					v23 = string(in.String())
					out.TypePostData = append(out.TypePostData, v23)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels15(out *jwriter.Writer, in ResponseInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix[1:])
		if in.Category == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v24, v25 := range in.Category {
				if v24 > 0 {
					out.RawByte(',')
				}
				out.String(string(v25))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"type_post_data\":"
		out.RawString(prefix)
		if in.TypePostData == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v26, v27 := range in.TypePostData {
				if v26 > 0 {
					out.RawByte(',')
				}
				out.String(string(v27))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels15(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels16(in *jlexer.Lexer, out *ResponseCreators) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "creators":
			if in.IsNull() {
				in.Skip()
				out.Creators = nil
			} else {
				in.Delim('[')
				if out.Creators == nil {
					if !in.IsDelim(']') {
						out.Creators = make([]ResponseCreator, 0, 0)
					} else {
						out.Creators = []ResponseCreator{}
					}
				} else {
					out.Creators = (out.Creators)[:0]
				}
				for !in.IsDelim(']') {
					var v28 ResponseCreator
					(v28).UnmarshalEasyJSON(in)
					out.Creators = append(out.Creators, v28)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels16(out *jwriter.Writer, in ResponseCreators) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"creators\":"
		out.RawString(prefix[1:])
		if in.Creators == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v29, v30 := range in.Creators {
				if v29 > 0 {
					out.RawByte(',')
				}
				(v30).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseCreators) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseCreators) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseCreators) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseCreators) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels16(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels17(in *jlexer.Lexer, out *ResponseCreatorWithAwards) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "category":
			out.Category = string(in.String())
		case "nickname":
			out.Nickname = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "cover":
			out.Cover = string(in.String())
		case "awards_id":
			out.AwardsId = int64(in.Int64())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels17(out *jwriter.Writer, in ResponseCreatorWithAwards) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix)
		out.String(string(in.Category))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	if in.Avatar != "" {
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	if in.Cover != "" {
		const prefix string = ",\"cover\":"
		out.RawString(prefix)
		out.String(string(in.Cover))
	}
	{
		const prefix string = ",\"awards_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.AwardsId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseCreatorWithAwards) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseCreatorWithAwards) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseCreatorWithAwards) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseCreatorWithAwards) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels17(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels18(in *jlexer.Lexer, out *ResponseCreatorTotalIncome) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "total_income":
			out.TotalIncome = float64(in.Float64())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels18(out *jwriter.Writer, in ResponseCreatorTotalIncome) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"total_income\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.TotalIncome))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseCreatorTotalIncome) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseCreatorTotalIncome) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseCreatorTotalIncome) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseCreatorTotalIncome) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels18(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels19(in *jlexer.Lexer, out *ResponseCreatorSubscrube) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "category":
			out.Category = string(in.String())
		case "nickname":
			out.Nickname = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "cover":
			out.Cover = string(in.String())
		case "awards_id":
			out.AwardsId = int64(in.Int64())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels19(out *jwriter.Writer, in ResponseCreatorSubscrube) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix)
		out.String(string(in.Category))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	if in.Avatar != "" {
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	if in.Cover != "" {
		const prefix string = ",\"cover\":"
		out.RawString(prefix)
		out.String(string(in.Cover))
	}
	{
		const prefix string = ",\"awards_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.AwardsId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseCreatorSubscrube) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseCreatorSubscrube) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseCreatorSubscrube) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseCreatorSubscrube) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels19(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels20(in *jlexer.Lexer, out *ResponseCreatorPostsViews) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "count_posts_views":
			out.CountPostsViews = int64(in.Int64())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels20(out *jwriter.Writer, in ResponseCreatorPostsViews) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"count_posts_views\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.CountPostsViews))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseCreatorPostsViews) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels20(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseCreatorPostsViews) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels20(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseCreatorPostsViews) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels20(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseCreatorPostsViews) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels20(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels21(in *jlexer.Lexer, out *ResponseCreatorPayments) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "payments":
			if in.IsNull() {
				in.Skip()
				out.Payments = nil
			} else {
				in.Delim('[')
				if out.Payments == nil {
					if !in.IsDelim(']') {
						out.Payments = make([]models.CreatorPayments, 0, 0)
					} else {
						out.Payments = []models.CreatorPayments{}
					}
				} else {
					out.Payments = (out.Payments)[:0]
				}
				for !in.IsDelim(']') {
					var v31 models.CreatorPayments
					easyjson316682a0DecodeGlideInternalAppModels1(in, &v31)
					out.Payments = append(out.Payments, v31)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels21(out *jwriter.Writer, in ResponseCreatorPayments) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"payments\":"
		out.RawString(prefix[1:])
		if in.Payments == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v32, v33 := range in.Payments {
				if v32 > 0 {
					out.RawByte(',')
				}
				easyjson316682a0EncodeGlideInternalAppModels1(out, v33)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseCreatorPayments) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels21(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseCreatorPayments) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels21(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseCreatorPayments) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels21(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseCreatorPayments) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels21(l, v)
}
func easyjson316682a0DecodeGlideInternalAppModels1(in *jlexer.Lexer, out *models.CreatorPayments) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_nickname":
			out.UserNickname = string(in.String())
		case "amount":
			out.Amount = float64(in.Float64())
		case "date":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Date).UnmarshalJSON(data))
			}
		case "creator_id":
			out.CreatorID = int64(in.Int64())
		case "user_id":
			out.UserID = int64(in.Int64())
		case "status":
			out.Status = bool(in.Bool())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppModels1(out *jwriter.Writer, in models.CreatorPayments) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_nickname\":"
		out.RawString(prefix[1:])
		out.String(string(in.UserNickname))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.Float64(float64(in.Amount))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.Raw((in.Date).MarshalJSON())
	}
	if in.CreatorID != 0 {
		const prefix string = ",\"creator_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.CreatorID))
	}
	if in.UserID != 0 {
		const prefix string = ",\"user_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.UserID))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.Bool(bool(in.Status))
	}
	out.RawByte('}')
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels22(in *jlexer.Lexer, out *ResponseCreatorCountSubscribers) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "count_subscribers":
			out.CountSubscribers = int64(in.Int64())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels22(out *jwriter.Writer, in ResponseCreatorCountSubscribers) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"count_subscribers\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.CountSubscribers))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseCreatorCountSubscribers) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels22(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseCreatorCountSubscribers) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels22(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseCreatorCountSubscribers) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels22(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseCreatorCountSubscribers) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels22(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels23(in *jlexer.Lexer, out *ResponseCreatorCountPosts) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "count_posts":
			out.CountPosts = int64(in.Int64())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels23(out *jwriter.Writer, in ResponseCreatorCountPosts) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"count_posts\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.CountPosts))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseCreatorCountPosts) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels23(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseCreatorCountPosts) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels23(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseCreatorCountPosts) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels23(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseCreatorCountPosts) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels23(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels24(in *jlexer.Lexer, out *ResponseCreator) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "category":
			out.Category = string(in.String())
		case "nickname":
			out.Nickname = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "cover":
			out.Cover = string(in.String())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels24(out *jwriter.Writer, in ResponseCreator) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix)
		out.String(string(in.Category))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	if in.Avatar != "" {
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	if in.Cover != "" {
		const prefix string = ",\"cover\":"
		out.RawString(prefix)
		out.String(string(in.Cover))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseCreator) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels24(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseCreator) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels24(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseCreator) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels24(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseCreator) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels24(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels25(in *jlexer.Lexer, out *ResponseBalance) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.ID = int64(in.Int64())
		case "balance":
			out.Balance = models.Money(in.Float64())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels25(out *jwriter.Writer, in ResponseBalance) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"balance\":"
		out.RawString(prefix)
		out.Raw((in.Balance).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseBalance) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels25(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseBalance) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels25(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseBalance) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels25(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseBalance) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels25(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels26(in *jlexer.Lexer, out *ResponseAwards) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "awards":
			if in.IsNull() {
				in.Skip()
				out.Awards = nil
			} else {
				in.Delim('[')
				if out.Awards == nil {
					if !in.IsDelim(']') {
						out.Awards = make([]ResponseAward, 0, 0)
					} else {
						out.Awards = []ResponseAward{}
					}
				} else {
					out.Awards = (out.Awards)[:0]
				}
				for !in.IsDelim(']') {
					var v34 ResponseAward
					(v34).UnmarshalEasyJSON(in)
					out.Awards = append(out.Awards, v34)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels26(out *jwriter.Writer, in ResponseAwards) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"awards\":"
		out.RawString(prefix[1:])
		if in.Awards == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v35, v36 := range in.Awards {
				if v35 > 0 {
					out.RawByte(',')
				}
				(v36).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseAwards) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels26(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseAwards) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels26(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseAwards) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels26(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseAwards) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels26(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels27(in *jlexer.Lexer, out *ResponseAward) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "awards_id":
			out.ID = int64(in.Int64())
		case "name":
			out.Name = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "price":
			out.Price = int64(in.Int64())
		case "color":
			(out.Color).UnmarshalEasyJSON(in)
		case "cover":
			out.Cover = string(in.String())
		case "child_award":
			out.ChildAward = int64(in.Int64())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels27(out *jwriter.Writer, in ResponseAward) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"awards_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	if in.Price != 0 {
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Int64(int64(in.Price))
	}
	if true {
		const prefix string = ",\"color\":"
		out.RawString(prefix)
		(in.Color).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"cover\":"
		out.RawString(prefix)
		out.String(string(in.Cover))
	}
	if in.ChildAward != 0 {
		const prefix string = ",\"child_award\":"
		out.RawString(prefix)
		out.Int64(int64(in.ChildAward))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseAward) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels27(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseAward) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels27(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseAward) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels27(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseAward) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels27(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels28(in *jlexer.Lexer, out *ResponseAvailablePosts) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "available_posts":
			if in.IsNull() {
				in.Skip()
				out.AvailablePosts = nil
			} else {
				in.Delim('[')
				if out.AvailablePosts == nil {
					if !in.IsDelim(']') {
						out.AvailablePosts = make([]models.AvailablePost, 0, 0)
					} else {
						out.AvailablePosts = []models.AvailablePost{}
					}
				} else {
					out.AvailablePosts = (out.AvailablePosts)[:0]
				}
				for !in.IsDelim(']') {
					var v37 models.AvailablePost
					easyjson316682a0DecodeGlideInternalAppModels2(in, &v37)
					out.AvailablePosts = append(out.AvailablePosts, v37)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels28(out *jwriter.Writer, in ResponseAvailablePosts) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"available_posts\":"
		out.RawString(prefix[1:])
		if in.AvailablePosts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v38, v39 := range in.AvailablePosts {
				if v38 > 0 {
					out.RawByte(',')
				}
				easyjson316682a0EncodeGlideInternalAppModels2(out, v39)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseAvailablePosts) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels28(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseAvailablePosts) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels28(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseAvailablePosts) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels28(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseAvailablePosts) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels28(l, v)
}
func easyjson316682a0DecodeGlideInternalAppModels2(in *jlexer.Lexer, out *models.AvailablePost) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "creator_nickname":
			out.CreatorNickname = string(in.String())
		case "posts_id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "type_awards":
			out.Awards = int64(in.Int64())
		case "likes":
			out.Likes = int64(in.Int64())
		case "cover":
			out.Cover = string(in.String())
		case "creator_id":
			out.CreatorId = int64(in.Int64())
		case "views":
			out.Views = int64(in.Int64())
		case "comments":
			out.Comments = int64(in.Int64())
		case "add_like":
			out.AddLike = bool(in.Bool())
		case "date":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Date).UnmarshalJSON(data))
			}
		case "is_draft":
			out.IsDraft = bool(in.Bool())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppModels2(out *jwriter.Writer, in models.AvailablePost) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"creator_nickname\":"
		out.RawString(prefix[1:])
		out.String(string(in.CreatorNickname))
	}
	{
		const prefix string = ",\"posts_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"type_awards\":"
		out.RawString(prefix)
		out.Int64(int64(in.Awards))
	}
	{
		const prefix string = ",\"likes\":"
		out.RawString(prefix)
		out.Int64(int64(in.Likes))
	}
	{
		const prefix string = ",\"cover\":"
		out.RawString(prefix)
		out.String(string(in.Cover))
	}
	{
		const prefix string = ",\"creator_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.CreatorId))
	}
	{
		const prefix string = ",\"views\":"
		out.RawString(prefix)
		out.Int64(int64(in.Views))
	}
	{
		const prefix string = ",\"comments\":"
		out.RawString(prefix)
		out.Int64(int64(in.Comments))
	}
	{
		const prefix string = ",\"add_like\":"
		out.RawString(prefix)
		out.Bool(bool(in.AddLike))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.Raw((in.Date).MarshalJSON())
	}
	{
		const prefix string = ",\"is_draft\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsDraft))
	}
	out.RawByte('}')
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels29(in *jlexer.Lexer, out *ResponseAttach) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "attach_id":
			out.ID = int64(in.Int64())
		case "value":
			out.Value = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels29(out *jwriter.Writer, in ResponseAttach) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"attach_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"value\":"
		out.RawString(prefix)
		out.String(string(in.Value))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseAttach) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels29(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseAttach) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels29(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseAttach) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels29(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseAttach) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels29(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels30(in *jlexer.Lexer, out *ResponseApplyAttach) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "attaches_id":
			if in.IsNull() {
				in.Skip()
				out.IDs = nil
			} else {
				in.Delim('[')
				if out.IDs == nil {
					if !in.IsDelim(']') {
						out.IDs = make([]int64, 0, 8)
					} else {
						out.IDs = []int64{}
					}
				} else {
					out.IDs = (out.IDs)[:0]
				}
				for !in.IsDelim(']') {
					var v40 int64
					v40 = int64(in.Int64())
					out.IDs = append(out.IDs, v40)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels30(out *jwriter.Writer, in ResponseApplyAttach) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"attaches_id\":"
		out.RawString(prefix[1:])
		if in.IDs == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v41, v42 := range in.IDs {
				if v41 > 0 {
					out.RawByte(',')
				}
				out.Int64(int64(v42))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseApplyAttach) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels30(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseApplyAttach) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels30(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseApplyAttach) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels30(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseApplyAttach) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels30(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels31(in *jlexer.Lexer, out *ProfileResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "nickname":
			out.Nickname = string(in.String())
		case "fullname":
			out.Fullname = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "about":
			out.About = string(in.String())
		case "age":
			out.Age = int64(in.Int64())
		case "country":
			out.Country = string(in.String())
		case "languages":
			if in.IsNull() {
				in.Skip()
				out.Languages = nil
			} else {
				in.Delim('[')
				if out.Languages == nil {
					if !in.IsDelim(']') {
						out.Languages = make([]string, 0, 4)
					} else {
						out.Languages = []string{}
					}
				} else {
					out.Languages = (out.Languages)[:0]
				}
				for !in.IsDelim(']') {
					var v43 string
					v43 = string(in.String())
					out.Languages = append(out.Languages, v43)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels31(out *jwriter.Writer, in ProfileResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix[1:])
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"fullname\":"
		out.RawString(prefix)
		out.String(string(in.Fullname))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	if in.About != "" {
		const prefix string = ",\"about\":"
		out.RawString(prefix)
		out.String(string(in.About))
	}
	{
		const prefix string = ",\"age\":"
		out.RawString(prefix)
		out.Int64(int64(in.Age))
	}
	{
		const prefix string = ",\"country\":"
		out.RawString(prefix)
		out.String(string(in.Country))
	}
	{
		const prefix string = ",\"languages\":"
		out.RawString(prefix)
		if in.Languages == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v44, v45 := range in.Languages {
				if v44 > 0 {
					out.RawByte(',')
				}
				out.String(string(v45))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ProfileResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels31(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ProfileResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels31(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ProfileResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels31(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ProfileResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels31(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels32(in *jlexer.Lexer, out *OkResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "OK":
			out.Ok = string(in.String())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels32(out *jwriter.Writer, in OkResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"OK\":"
		out.RawString(prefix[1:])
		out.String(string(in.Ok))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v OkResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels32(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OkResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels32(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OkResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels32(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OkResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels32(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels33(in *jlexer.Lexer, out *IdResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels33(out *jwriter.Writer, in IdResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v IdResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels33(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v IdResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels33(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *IdResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels33(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *IdResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels33(l, v)
}
func easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels34(in *jlexer.Lexer, out *ErrResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Err = string(in.String())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels34(out *jwriter.Writer, in ErrResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Err))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ErrResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels34(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ErrResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson316682a0EncodeGlideInternalAppDeliveryHttpModels34(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ErrResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels34(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ErrResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson316682a0DecodeGlideInternalAppDeliveryHttpModels34(l, v)
}
