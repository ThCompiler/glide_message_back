// Code generated by MockGen. DO NOT EDIT.
// Source: glide/internal/app/usecase/payments (interfaces: Usecase)

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	models "glide/internal/app/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// PaymentsUsecase is a mock of Usecase interface.
type PaymentsUsecase struct {
	ctrl     *gomock.Controller
	recorder *PaymentsUsecaseMockRecorder
}

// PaymentsUsecaseMockRecorder is the mock recorder for PaymentsUsecase.
type PaymentsUsecaseMockRecorder struct {
	mock *PaymentsUsecase
}

// NewPaymentsUsecase creates a new mock instance.
func NewPaymentsUsecase(ctrl *gomock.Controller) *PaymentsUsecase {
	mock := &PaymentsUsecase{ctrl: ctrl}
	mock.recorder = &PaymentsUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *PaymentsUsecase) EXPECT() *PaymentsUsecaseMockRecorder {
	return m.recorder
}

// GetCreatorPayments mocks base method.
func (m *PaymentsUsecase) GetCreatorPayments(arg0 int64, arg1 *models.Pagination) ([]models.CreatorPayments, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCreatorPayments", arg0, arg1)
	ret0, _ := ret[0].([]models.CreatorPayments)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCreatorPayments indicates an expected call of GetCreatorPayments.
func (mr *PaymentsUsecaseMockRecorder) GetCreatorPayments(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCreatorPayments", reflect.TypeOf((*PaymentsUsecase)(nil).GetCreatorPayments), arg0, arg1)
}

// GetUserPayments mocks base method.
func (m *PaymentsUsecase) GetUserPayments(arg0 int64, arg1 *models.Pagination) ([]models.UserPayments, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserPayments", arg0, arg1)
	ret0, _ := ret[0].([]models.UserPayments)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserPayments indicates an expected call of GetUserPayments.
func (mr *PaymentsUsecaseMockRecorder) GetUserPayments(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserPayments", reflect.TypeOf((*PaymentsUsecase)(nil).GetUserPayments), arg0, arg1)
}
